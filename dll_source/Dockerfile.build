# Dockerfile for building MT4 ZeroMQ DLL
FROM ubuntu:20.04

# Prevent interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# Install build tools and dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    mingw-w64 \
    git \
    wget \
    unzip \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Install ZeroMQ from source for cross-compilation
WORKDIR /build

# Download and extract ZeroMQ
RUN wget https://github.com/zeromq/libzmq/releases/download/v4.3.4/zeromq-4.3.4.tar.gz && \
    tar -xzf zeromq-4.3.4.tar.gz && \
    cd zeromq-4.3.4 && \
    mkdir build-win32

# Build ZeroMQ for Windows 32-bit
WORKDIR /build/zeromq-4.3.4/build-win32
RUN cmake .. \
    -DCMAKE_TOOLCHAIN_FILE=/build/toolchain-mingw32.cmake \
    -DCMAKE_INSTALL_PREFIX=/usr/i686-w64-mingw32 \
    -DZMQ_BUILD_TESTS=OFF \
    -DBUILD_SHARED_LIBS=ON

# Create toolchain file
RUN echo 'set(CMAKE_SYSTEM_NAME Windows)' > /build/toolchain-mingw32.cmake && \
    echo 'set(CMAKE_C_COMPILER i686-w64-mingw32-gcc)' >> /build/toolchain-mingw32.cmake && \
    echo 'set(CMAKE_CXX_COMPILER i686-w64-mingw32-g++)' >> /build/toolchain-mingw32.cmake && \
    echo 'set(CMAKE_RC_COMPILER i686-w64-mingw32-windres)' >> /build/toolchain-mingw32.cmake && \
    echo 'set(CMAKE_FIND_ROOT_PATH /usr/i686-w64-mingw32)' >> /build/toolchain-mingw32.cmake && \
    echo 'set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)' >> /build/toolchain-mingw32.cmake && \
    echo 'set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)' >> /build/toolchain-mingw32.cmake && \
    echo 'set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)' >> /build/toolchain-mingw32.cmake

# Copy source files
COPY . /build/mt4zmq

# Build MT4ZMQ DLL
WORKDIR /build/mt4zmq
RUN mkdir build && cd build && \
    cmake .. \
    -DCMAKE_TOOLCHAIN_FILE=/build/toolchain-mingw32.cmake \
    -DCMAKE_BUILD_TYPE=Release && \
    make

# The output DLL will be in /build/mt4zmq/build/