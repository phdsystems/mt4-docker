version: '3.8'

services:
  security-updater:
    build:
      context: .
      dockerfile: infra/docker/Dockerfile.security-updater
    container_name: mt4_security_updater
    restart: unless-stopped
    environment:
      - SLACK_WEBHOOK_URL=${SLACK_WEBHOOK_URL:-}
      - SECURITY_EMAIL=${SECURITY_EMAIL:-security@example.com}
      - SECURITY_CONFIG=/app/config/security.json
    volumes:
      # Mount Docker socket for image scanning
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # Mount host apt sources for system updates (optional)
      # - /etc/apt:/etc/apt:ro
      # Logs volume
      - security_logs:/app/logs
      # Config volume
      - ./../../config/security:/app/config:ro
    networks:
      - mt4_network
      - elk_network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "pgrep", "cron"]
      interval: 5m
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  # Security dashboard (optional)
  security-dashboard:
    image: aquasec/trivy:latest
    container_name: mt4_security_dashboard
    command: server --listen 0.0.0.0:8080
    ports:
      - "8080:8080"
    environment:
      - TRIVY_NO_PROGRESS=true
      - TRIVY_CACHE_DIR=/tmp/trivy-cache
    volumes:
      - trivy_cache:/tmp/trivy-cache
    networks:
      - mt4_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

volumes:
  security_logs:
    driver: local
  trivy_cache:
    driver: local

networks:
  mt4_network:
    external: true
    name: mt4_network
  elk_network:
    external: true
    name: mt4_elk_network