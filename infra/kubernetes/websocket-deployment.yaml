apiVersion: apps/v1
kind: Deployment
metadata:
  name: mt4-websocket
  namespace: mt4-trading
  labels:
    app: mt4-websocket
    app.kubernetes.io/name: mt4-websocket
    app.kubernetes.io/part-of: mt4-trading-system
    app.kubernetes.io/component: websocket-server
spec:
  replicas: 2
  selector:
    matchLabels:
      app: mt4-websocket
  template:
    metadata:
      labels:
        app: mt4-websocket
        app.kubernetes.io/name: mt4-websocket
        app.kubernetes.io/part-of: mt4-trading-system
        app.kubernetes.io/component: websocket-server
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - mt4-websocket
              topologyKey: kubernetes.io/hostname
      
      containers:
      - name: websocket
        image: mt4-websocket:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8765
          name: websocket
          protocol: TCP
        
        env:
        - name: WS_HOST
          value: "0.0.0.0"
        - name: WS_PORT
          valueFrom:
            configMapKeyRef:
              name: mt4-config
              key: WS_PORT
        - name: ZMQ_PUBLISHER
          value: "tcp://mt4-service:5556"
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: mt4-secrets
              key: JWT_SECRET
        - name: HEARTBEAT_INTERVAL
          valueFrom:
            configMapKeyRef:
              name: mt4-config
              key: HEARTBEAT_INTERVAL
        
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "250m"
        
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import websockets; import asyncio; asyncio.run(websockets.connect('ws://localhost:8765'))"
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
        
        readinessProbe:
          tcpSocket:
            port: 8765
          initialDelaySeconds: 10
          periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: mt4-websocket-service
  namespace: mt4-trading
  labels:
    app: mt4-websocket
    app.kubernetes.io/name: mt4-websocket-service
    app.kubernetes.io/part-of: mt4-trading-system
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"  # For AWS
spec:
  type: LoadBalancer
  selector:
    app: mt4-websocket
  ports:
  - name: websocket
    port: 8765
    targetPort: 8765
    protocol: TCP
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 3600