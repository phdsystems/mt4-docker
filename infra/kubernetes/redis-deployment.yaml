apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: mt4-trading
  labels:
    app: redis
    app.kubernetes.io/name: redis
    app.kubernetes.io/part-of: mt4-trading-system
    app.kubernetes.io/component: cache
spec:
  serviceName: redis-service
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
        app.kubernetes.io/name: redis
        app.kubernetes.io/part-of: mt4-trading-system
        app.kubernetes.io/component: cache
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        fsGroup: 999
      
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        
        command:
        - redis-server
        - --requirepass
        - $(REDIS_PASSWORD)
        - --appendonly
        - "yes"
        - --maxmemory
        - "256mb"
        - --maxmemory-policy
        - "allkeys-lru"
        
        env:
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mt4-secrets
              key: REDIS_PASSWORD
        
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "250m"
        
        livenessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 30
          periodSeconds: 10
        
        readinessProbe:
          exec:
            command:
            - redis-cli
            - -a
            - $(REDIS_PASSWORD)
            - ping
          initialDelaySeconds: 5
          periodSeconds: 5
        
        volumeMounts:
        - name: redis-data
          mountPath: /data
  
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: mt4-trading
  labels:
    app: redis
    app.kubernetes.io/name: redis-service
    app.kubernetes.io/part-of: mt4-trading-system
spec:
  type: ClusterIP
  selector:
    app: redis
  ports:
  - name: redis
    port: 6379
    targetPort: 6379
    protocol: TCP