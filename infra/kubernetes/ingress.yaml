apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mt4-ingress
  namespace: mt4-trading
  labels:
    app.kubernetes.io/name: mt4-ingress
    app.kubernetes.io/part-of: mt4-trading-system
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/limit-rps: "10"
    nginx.ingress.kubernetes.io/limit-rpm: "100"
    nginx.ingress.kubernetes.io/limit-connections: "10"
    
    # Proxy settings
    nginx.ingress.kubernetes.io/proxy-body-size: "1m"
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "60"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "60"
    
    # Security headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "X-Frame-Options: SAMEORIGIN";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
spec:
  tls:
  - hosts:
    - api.mt4.example.com
    - ws.mt4.example.com
    - monitor.mt4.example.com
    secretName: mt4-tls
  
  rules:
  # API endpoint
  - host: api.mt4.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mt4-api-service
            port:
              number: 5000
  
  # WebSocket endpoint
  - host: ws.mt4.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mt4-websocket-service
            port:
              number: 8765
  
  # Monitoring endpoints
  - host: monitor.mt4.example.com
    http:
      paths:
      - path: /prometheus
        pathType: Prefix
        backend:
          service:
            name: prometheus-service
            port:
              number: 9090
      - path: /
        pathType: Prefix
        backend:
          service:
            name: grafana-service
            port:
              number: 3000

---
# WebSocket-specific ingress with special annotations
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: mt4-websocket-ingress
  namespace: mt4-trading
  labels:
    app.kubernetes.io/name: mt4-websocket-ingress
    app.kubernetes.io/part-of: mt4-trading-system
  annotations:
    kubernetes.io/ingress.class: nginx
    cert-manager.io/cluster-issuer: letsencrypt-prod
    
    # WebSocket support
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/websocket-services: "mt4-websocket-service"
    nginx.ingress.kubernetes.io/upstream-hash-by: "$remote_addr"
    
    # Configuration for WebSocket
    nginx.ingress.kubernetes.io/configuration-snippet: |
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
spec:
  tls:
  - hosts:
    - ws.mt4.example.com
    secretName: mt4-websocket-tls
  
  rules:
  - host: ws.mt4.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: mt4-websocket-service
            port:
              number: 8765