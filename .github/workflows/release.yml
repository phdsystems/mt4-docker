name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Run tests
        run: |
          chmod +x run_tests.sh
          ./run_tests.sh all

  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker image
        run: |
          docker build -t mt4-docker:${{ github.ref_name }} .
          docker save mt4-docker:${{ github.ref_name }} | gzip > mt4-docker-${{ github.ref_name }}.tar.gz
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## MT4 Docker Release ${{ github.ref_name }}
            
            ### What's Changed
            - See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/CHANGELOG.md) for details
            
            ### Docker Image
            Download the attached `mt4-docker-${{ github.ref_name }}.tar.gz` and load it:
            ```bash
            docker load < mt4-docker-${{ github.ref_name }}.tar.gz
            ```
            
            ### Quick Start
            ```bash
            # Clone repository
            git clone https://github.com/${{ github.repository }}.git
            cd mt4-docker
            
            # Setup environment
            cp .env.example .env
            # Edit .env with your MT4 credentials
            
            # Start MT4
            ./bin/quick_start.sh
            ```
          draft: false
          prerelease: false
      
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./mt4-docker-${{ github.ref_name }}.tar.gz
          asset_name: mt4-docker-${{ github.ref_name }}.tar.gz
          asset_content_type: application/gzip